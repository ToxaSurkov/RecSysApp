name: Build and Deploy Arena App with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Add SSH key for remote server access
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lifetime: 60m

      - name: Configure SSH to extend timeout
        run: |
          echo "Host *" >> ~/.ssh/config
          echo "  ServerAliveInterval 60" >> ~/.ssh/config
          echo "  ServerAliveCountMax 10" >> ~/.ssh/config

      # Step 3: Clone repository and build the new Docker container on the remote server
      - name: Build new Docker container on the remote server
        run: |
          ssh -t -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} -p ${{ secrets.REMOTE_PORT }} << 'EOF'
          cd /home/${{ secrets.REMOTE_USER }}
          cd recsys
          sudo docker build --no-cache --progress=plain -t recsys-app-new .
          EOF

      # Step 4: Stop old container and run new Docker container on the server
      - name: Stop old container and run new Docker container on the server
        run: |
          ssh -t -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} -p ${{ secrets.REMOTE_PORT }}  << 'EOF'
          if [ "$(sudo docker ps -q -f name=recsys-app)" ]; then
            sudo docker stop recsys-app
            sudo docker rm recsys-app
          fi
          sudo docker run -d --gpus all -v /home/${{ secrets.REMOTE_USER }}/recsys/data:/app/data -v /home/${{ secrets.REMOTE_USER }}/recsys/models:/app/models -v /home/${{ secrets.REMOTE_USER }}/recsys/db_new:/app/db --name recsys-app -p 7860:7860 -p 8171:8171 recsys-app-new
          sudo docker system prune -f
          EOF
